import pathlib

from aiogram import types
from aiogram.dispatcher.filters import Command
from aiogram.types import InputFile
from aiogram.utils.exceptions import BadRequest, TelegramAPIError

from config import CHAT_ID
from loader import dp, db
from utils.throttlig import rate_limit
from aiofile import async_open

@rate_limit(limit=3)
@dp.message_handler(Command('rating_book'))
async def rating(message: types.Message):

    count = await db.select_count_values('books')
    return await message.answer(text=f'–í—Å–µ–≥–æ –±—ã–ª–æ —Å–∫–∞—á–∞–Ω–æ –∫–Ω–∏–≥: {count}')


@rate_limit(limit=3)
@dp.message_handler(Command('rating_user'))
async def rating(message: types.Message):

    count = await db.select_count_values('users')
    return await message.answer(text=f'–í—Å–µ–≥–æ –≤ –±–∞–∑–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {count}')


@dp.message_handler(Command('delete'))
async def delete_table(message: types.Message):
    args = message.get_args()
    if args == 'tables' and message.from_user.id == CHAT_ID:
        await db.delete_table_pages()
        await db.create_tables()
    return await message.answer('–¢–∞–±–ª–∏—Ü—ã –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã!')


@dp.message_handler(Command('log_file'))
async def send_log_file(message: types.Message):

    path = pathlib.Path('debug.log').resolve()
    file = InputFile(path)
    try:
        await message.answer_document(file)
        async with async_open(path, 'w') as data:               # –û—á–∏—â–∞–µ–º –ª–æ–≥ —Ñ–∞–π–ª, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –º—É—Å–æ—Ä–∞
            await data.write(' ')
    except TelegramAPIError:
        await message.answer('–û—à–∏–±–æ–∫ –ø–æ–∫–∞ –Ω–µ –±—ã–ª–æ –∑–∞–º–µ—á–µ–Ω–æ\n'
                             '–õ–æ–≥ —Ñ–∞–π–ª –ø—É—Å—Ç üëå')

